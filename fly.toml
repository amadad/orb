app = "digital-being"
primary_region = "sjc" # Silicon Valley
kill_signal = "SIGINT"
kill_timeout = 5

[build]
  builder = "paketobuildpacks/builder:base"

[env]
  PORT = "8000"
  PYTHONUNBUFFERED = "1"
  PYTHONDONTWRITEBYTECODE = "1"
  
# Add swap to help with memory spikes
swap_size_mb = 512

[experimental]
  auto_rollback = true

[http_service]
  internal_port = 8000
  force_https = true
  auto_stop_machines = true
  auto_start_machines = true
  min_machines_running = 0
  processes = ["app"]
  
  # Concurrency controls
  concurrency = {type = "connections", hard_limit = 1000, soft_limit = 800}
  
  # Add HTTP options for better performance
  [http_service.http_options]
    response.headers = {X-Frame-Options = "SAMEORIGIN", X-XSS-Protection = "1; mode=block"}

[[services.ports]]
  port = 80
  handlers = ["http"]
  force_https = true

[[services.ports]]
  port = 443
  handlers = ["tls", "http"]

[[services.tcp_checks]]
  interval = "15s"
  timeout = "2s"
  grace_period = "1s"

[[http_service.checks]]
  grace_period = "10s"
  interval = "30s"
  method = "GET"
  timeout = "5s"
  path = "/health"
  protocol = "http"
  
  # Add retries and threshold for better reliability
  retries = 3
  threshold = 2

# VM configuration for better resource control
[vm]
  size = "shared-cpu-1x"
  memory = "512mb"
  cpus = 1

# Specify restart policy
[restart]
  policy = "always"
  max_retries = 10

[deploy]
  strategy = "rolling"
  release_command = "python -c 'import sys; print(\"Digital Being starting...\", file=sys.stderr)'"> 